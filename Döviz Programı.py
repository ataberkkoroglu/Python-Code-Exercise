from PyQt5 import QtGui,QtWidgets,QtMultimedia,QtLocation
import sys,requests
from bs4 import BeautifulSoup
from datetime import datetime

class Window():
    def __init__(self):
        self.program()
    def program(self):
        self.pencere=QtWidgets.QWidget()
        self.pencere.setWindowTitle("Döviz Hesaplama")
        self.picture=QtWidgets.QLabel()
        self.alan=QtWidgets.QLabel("")
        self.picture.setPixmap(QtGui.QPixmap("Currency.png"))
        self.alan2=QtWidgets.QLabel()
        self.doviz1=QtWidgets.QComboBox()
        self.doviz2=QtWidgets.QComboBox()
        self.list=["DOLAR","EURO","STERLIN"]
        self.list2=["DOLAR","TRY","EURO","STERLIN"]
        self.doviz1.addItems(self.list)
        self.doviz2.addItems(self.list2)
        self.alan.setFont(QtGui.QFont("Arial Font",20))
        self.yazı=QtWidgets.QLabel("Paranızın Birimi:")
        self.yazı2=QtWidgets.QLabel("Çevrileceği Para Birimi:")
        
        self.buton=QtWidgets.QPushButton("Hesapla")
        self.buton.setShortcut("Return")
        self.alan3=QtWidgets.QLineEdit()
        self.alan4=QtWidgets.QLabel("")
        self.alan4.setFont(QtGui.QFont("Arial Font",20))
        self.alan5=QtWidgets.QLabel("")
        self.alan5.setFont(QtGui.QFont("Arial Font",20))
        v_box=QtWidgets.QVBoxLayout()
        h_box3=QtWidgets.QHBoxLayout()
        h_box2=QtWidgets.QHBoxLayout()
        h_box=QtWidgets.QHBoxLayout()
        h_box4=QtWidgets.QHBoxLayout()
        v_box.addStretch()
        v_box.addWidget(self.picture)
        #h_box4.addWidget(self.yazı3)
        #h_box4.addWidget(self.alan3)
        h_box3.addWidget(self.yazı)
        h_box3.addWidget(self.doviz1)
        h_box2.addWidget(self.yazı2)
        h_box2.addWidget(self.doviz2)
        v_box.addLayout(h_box4)
        v_box.addLayout(h_box3)
        v_box.addLayout(h_box2)
        v_box.addWidget(self.buton)
        v_box.addWidget(self.alan2)
        v_box.addWidget(self.alan)
        v_box.addWidget(self.alan4)
        v_box.addWidget(self.alan5)
        v_box.addStretch()
        h_box.addStretch()
        h_box.addLayout(v_box)
        h_box.addStretch()
        self.pencere.setLayout(h_box)
        self.buton.pressed.connect(self.hesap)
        self.pencere.setMinimumSize(550,359)
        self.pencere.show()
    def hesap(self):
        response=requests.get("https://www.bloomberght.com/doviz")
        response2=requests.get("https://kur.doviz.com/serbest-piyasa/sterlin")
        response3=requests.get("https://www.doviz.com/pariteler/gbp-eur")
        response4=requests.get("https://canlidoviz.com/doviz-kurlari/dolar")
        response5=requests.get("https://canlidoviz.com/pariteler/dolar-sterlin")
        response6=requests.get("https://wise.com/tr/currency-converter/try-to-eur-rate?amount=1")
        content6=response6.content
        content5=response5.content
        content4=response4.content
        content3=response3.content
        content2=response2.content
        content=response.content
        soup=BeautifulSoup(content,"html.parser")
        soup2=BeautifulSoup(content2,"html.parser")
        soup3=BeautifulSoup(content3,"html.parser")
        soup4=BeautifulSoup(content4,"html.parser")
        soup5=BeautifulSoup(content5,"html.parser")
        soup6=BeautifulSoup(content6,"html.parser")
        Kur1=soup.find("small",{"data-secid":"USDTRY Curncy"})
        Kur2=soup.find("small",{"data-secid":"EURTRY Curncy"})
        Kur3=soup.find("small",{"data-secid":"EURUSD Curncy"})
        Kur4=soup2.find("div",{"class":"text-xl font-semibold text-white"})
        Kur5=soup.find("span",{"data-secid":"GBPUSD Curncy"})
        Kur6=soup.find("span",{"data-secid":"EURGBP CURNCY"})
        Kur7=soup3.find("div",{"data-socket-attr":"s"})
        Kur8=soup4.find("tr",{"data-code":"USD/EUR"})
        Kur9=soup5.find("strong")
        Kur10=soup.find("span" ,{"class":"value eur-usd-bid"})
        Kur11=soup.find("span" ,{"class":"value eur-usd-ask"})
        Kur12=soup.find("span" ,{"class":"value euro-bid"})
        Kur13=soup.find("span",{" class":"value euro-ask"})
        Kur14=soup.find("span",{" class":"value dolar-bid"})
        Kur15=soup.find("span",{"class":"value dolar-ask"})
        Kur16=soup2.find("span",{"data-socket-attr":"b"})
        Kur17=soup2.find("span",{"data-socket-key":"GBP"})
        Kur18=soup6.find("td",{"data-rate-times-amount":"EUR"})
        birim=self.doviz1.currentText()
        birim2=self.doviz2.currentText()
        a=list()
        if birim2=="TRY" and birim=="DOLAR":
          self.alan2.setText(str(datetime.ctime(datetime.now())))
          self.alan.setText(birim+"/"+birim2+":"+str(Kur1))
          self.alan4.setText(birim+"/"+birim2+" Alış Fiyatı :"+str(Kur14))
          self.alan5.setText(birim+"/"+birim2+" Satış Fiyatı :"+str(Kur15))
        elif birim2=="TRY" and birim=="EURO":
            self.alan2.setText(str(datetime.ctime(datetime.now())))
            self.alan.setText(birim+"/"+birim2+":"+str(Kur2))
            self.alan4.setText(birim+"/"+birim2+" Alış Fiyatı :"+str(Kur12))
            self.alan5.setText(birim+"/"+birim2+" Satış Fiyatı :"+str(Kur13))
        elif birim2=="DOLAR" and birim=="EURO":
            self.alan2.setText(str(datetime.ctime(datetime.now())))
            self.alan.setText(birim+"/"+birim2+":"+str(Kur3))
            self.alan4.setText(birim+"/"+birim2+" Alış Fiyatı :"+str(Kur10))
            self.alan5.setText(birim+"/"+birim2+" Satış Fiyatı :"+str(Kur11))
        elif (birim=="DOLAR" and birim2=="DOLAR") or (birim=="EURO" and birim2=="EURO") or (birim=="STERLIN" and birim2=="STERLIN") or (birim=="TRY" and birim2=="TRY"):
            self.alan4.clear()
            self.alan5.clear()
            self.alan2.setText(str(datetime.ctime(datetime.now())))
            self.alan.setText(birim+"/"+birim2+":"+"1")
        elif birim=="STERLIN" and birim2=="TRY" :
            
            self.alan2.setText(str(datetime.ctime(datetime.now())))
            self.alan.setText(birim+"/"+birim2+":"+str(Kur4))
            self.alan4.setText(birim+"/"+birim2+" Alış Fiyatı :"+str(Kur16))
            self.alan5.setText(birim+"/"+birim2+" Satış Fiyatı :"+str(Kur17))
        elif birim=="STERLIN" and birim2=="DOLAR":
            self.alan4.clear()
            self.alan5.clear()
            self.alan2.setText(str(datetime.ctime(datetime.now())))
            self.alan.setText(birim+"/"+birim2+":"+str(Kur5))
        elif birim2=="STERLIN" and birim=="EURO":
            self.alan4.clear()
            self.alan5.clear()
            self.alan2.setText(str(datetime.ctime(datetime.now())))
            self.alan.setText(birim+"/"+birim2+":"+str(Kur6))
        elif birim2=="EURO" and birim=="STERLIN":
            self.alan4.clear()
            self.alan5.clear()
            self.alan2.setText(str(datetime.ctime(datetime.now())))
            self.alan.setText(birim+"/"+birim2+":"+str(Kur7))
        elif birim=="DOLAR" and birim2=="EURO":
            self.alan4.clear()
            self.alan5.clear()
            self.alan2.setText(str(datetime.ctime(datetime.now())))
            self.alan.setText(str(Kur8.text))
        elif birim=="DOLAR" and birim2=="STERLIN":
            self.alan4.clear()
            self.alan5.clear()
            self.alan2.setText(str(datetime.ctime(datetime.now())))
            self.alan.setText(birim+"/"+birim2+":"+str(Kur9))
        elif birim=="TRY" and birim2=="DOLAR":
            self.alan4.clear()
            self.alan5.clear()
            self.alan2.setText(str(datetime.ctime(datetime.now())))
        elif birim=="TRY" and birim2=="EURO":
            self.alan4.clear()
            self.alan5.clear()
            self.alan2.setText(str(datetime.ctime(datetime.now())))
            self.alan.setText(birim+"/"+birim2+":"+str(Kur18))
        elif birim=="TRY" and birim2=="STERLIN":
            self.alan4.clear()
            self.alan5.clear()
            self.alan2.setText(str(datetime.ctime(datetime.now())))
        
app=QtWidgets.QApplication(sys.argv)
windows=Window()
app.setWindowIcon(QtGui.QIcon("Currency2.png"))
sys.exit(app.exec_())
